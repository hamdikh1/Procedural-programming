Proc√©dure dot_product (VAR v1 , v2 : ARRAY_OF INTEGER;  var ps : INTEGER)
Var
I:INTEGER
BEGIN
ps:= 0
i:= 0
IF (v1.length<>v2.length) THEN
write ("vectors are diffents")
END IF
for i TO v1.length-1 DO
 ps := ps +v1[i]*v2[i]
 END FOR


ALGORITHM orth-vectors
Var
v1,v2 : ARRAY_OF INTEGER [30]
ps : INTEGER
n1, n2 : INTEGER
BEGIN
n1 :=  read_size()
red_array (n1,v1)
n2 := read_size
red_array(n2,v2)

dot_product(v1,v2,ps)

IF(PS=0) THEN
write("v1 and v2 are ortho")
ELSE
write("v1 and v2 are  not ortho")
END

 



Fonction dot_product (var v1,v2 : ARRAY_OF INTEGER ) : INTEGER
VAR
I,ps : INTEGER
n1,n2 : INTEGER

BEGIN
ps:= INTEGER
i := INTEGER
IF (v1.length<>v2.length) THEN
write ("vectors are diffents")
END IF
While (i<v1.length) DO
ps := ps +v1[i]*v2[i]
i++
END While

RETURN ps

END